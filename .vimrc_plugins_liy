Plugin 'gmarik/Vundle.vim'
let g:vundle_default_git_proto = 'git'

" ---------------------------------------------
Plugin 'altercation/vim-colors-solarized'
let g:solarized_termcolors=256
" ---------------------------------------------

" nerdtree: invoke by :NERDTreeToggle
" ---------------------------------------------
Plugin 'scrooloose/nerdtree'
let g:NERDTreeWinSize = 30
let g:NERDTreeMouseMode = 1
let g:NERDTreeMapToggleZoom = '<Space>'
" nmap <C-e> :NERDTreeToggle<CR>
" ---------------------------------------------

Plugin 'jistr/vim-nerdtree-tabs'
nmap <C-e> :NERDTreeTabsToggle<CR>
let g:nerdtree_tabs_synchronize_view = 1 
let g:nerdtree_tabs_synchronize_focus = 1 
let g:nerdtree_tabs_open_on_console_startup = 0

" vim-go
" ---------------------------------------------
Plugin 'fatih/vim-go'
au FileType go nmap <leader>gr <Plug>(go-run)
au FileType go nmap <leader>gb <Plug>(go-build)
au FileType go nmap <leader>gt <Plug>(go-test)
au FileType go nmap <leader>gc <Plug>(go-converage)
au FileType go nmap <leader>gs <Plug>(go-implements)
au FileType go nmap <leader>gi <Plug>(go-info)
"default: gd, which opens the target identifier in current buffer.
"au FileType go nmap <leader>dg<Plug>(go-def)
au FileType go nmap <leader>ds <Plug>(go-def-split)
au FileType go nmap <leader>dv <Plug>(go-def-vertical)
au FileType go nmap <leader>dt <Plug>(go-def-tab)

let g:go_highlight_functions = 1
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_operators = 1
let g:go_highlight_build_constraints = 1
let g:go_fmt_command = "goimports"
let g:go_fmt_autosave = 1

" ---------------------------------------------

Plugin 'nsf/gocode', {'rtp':'vim/'}


" tagbar: invoke by :TagBarToggle
" ---------------------------------------------
Plugin 'majutsushi/tagbar'
nmap <F12> :TagbarToggle<CR>
" ---------------------------------------------

" YouCompleteMe
" ---------------------------------------------
Plugin 'Valloric/YouCompleteMe'
set completeopt="menu"
let g:ycm_key_detailed_diagnostics = '<leader>d'
nnoremap <leader>gg :YcmCompleter GoToDefinitionElseDeclaration<CR>
let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'
let g:ycm_seed_identifiers_with_syntax=1
set completeopt-=preview

" ---------------------------------------------

" 快速打开文件 
" ---------------------------------------------
Plugin 'kien/ctrlp.vim'
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_by_filename = 1
let g:ctrlp_regexp = 0
" ---------------------------------------------

" 快速查找文件
Plugin 'Yggdroot/LeaderF'


" 自动闭合括号
" ---------------------------------------------
"Plugin 'Raimondi/delimitMate'
Plugin 'kana/vim-smartinput'
" ---------------------------------------------

Plugin 'fatih/molokai'
let g:molokai_original = 1

Plugin 'sickill/vim-monokai'

Plugin 'scrooloose/nerdcommenter'
let g:NERDSpaceDelims=1
" <leader>cc 加注释
" <leader>cu 解开注释
" <leader>c<space> 加上/解开注释，智能判断
" <leader>cy 先复制，再注解(p可以进行粘贴)

" ---------------------------------------------
"
Plugin 'scrooloose/syntastic'

Plugin 'mattn/emmet-vim'

Plugin 'othree/html5.vim'

Plugin 'Yggdroot/indentLine'

Plugin 'tpope/vim-surround'

Plugin 'easymotion/vim-easymotion'

" 彩虹括号
" ---------------------------------------------
Plugin 'kien/rainbow_parentheses.vim'
let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]

let g:rbpt_max = 16
"au VimEnter * RainbowParenthesesToggle          " Toggle it on/off
"au Syntax * RainbowParenthesesLoadRound         " (), the defualt when toggleing
"au Syntax * RainbowParenthesesLoadSquare        " []
"au Syntax * RainbowParenthesesLoadBraces        " {}
"au Syntax * RainbowParenthesesLoadChevrons      " <>

" ---------------------------------------------

Plugin 'elzr/vim-json'
let g:vim_json_syntax_conceal=0
